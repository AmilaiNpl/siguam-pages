{"version":3,"sources":["views/forms/ReviewOrder/BiografiaDetails.jsx","views/forms/student/detalhes.js","../node_modules/@material-ui/core/MenuItem/menuItemClasses.js","../node_modules/@material-ui/core/MenuItem/MenuItem.js"],"names":["BiografiaDetails","props","useState","updateDOM","setUpdateDOM","formValues","apelido","incorporacao","nome","pai","cidade","telemovel","ativo","mae","nuit","dataNascimento","sexo","nacionalidade","naturalidade","tipoDocumento","numeroDocumento","numero","situacao","a","Promise","all","requesicoes","buscarProvincia","buscarCidades","listaProvincias","listaCidades","data","console","log","useEffect","init","Grid","item","xs","sm","Typography","variant","gutterBottom","style","lineHeight","paddingRight","moment","format","name","estudante","anosMatricula","idDesc","avaliacoes","avaliacoesSemExames","tiposAvaliacaoOrdemUnicos","tiposAvaliacaoOrdenados","listaMatricula","card","Fragment","CardContent","sx","fontSize","color","Historico","setIsLoadingData","setInitialValues","cadeirasMatriculdas","setCadeirasMatriculdas","anoSelecionado","setAnoSelecionado","updateDom","setUpdateDom","carregando","setCarregando","location","useLocation","encryptedParam","URLSearchParams","search","get","decryptParam","setTimeout","CryptoJS","AES","decrypt","toString","enc","Utf8","getestudanteById","getMatriculaByEstudante","requestEstudante","listaMatriculaRequest","forEach","matricula","dataMatricula","anoMatricula","Date","getFullYear","includes","push","handleBaixar","params","resolve","getAproveitamento","filter","avaliacao","tipoAvaliacao","length","Array","from","Set","map","ordem","cadeirasMatricula","cadeira","cadeiras","tiposTeste","tipo","startsWith","tiposTrabalho","flatMap","m","calculateMedia","notas","notasValidas","Object","values","nota","isNaN","parseFloat","reduce","acc","toFixed","display","justifyContent","alignItems","width","marginTop","MoonLoader","Container","Paper","container","Button","className","onClick","Box","minWidth","Card","float","spacing","TextField","type","onChange","event","target","value","select","margin","id","fullWidth","label","opt","MenuItem","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","align","tipoAvaliacaoOrdem","index","split","TableBody","notasDisciplina","matriculaEstudante","find","some","cadeiraMat","parseInt","codigo","anoFrequencia","getMenuItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","MenuItemRoot","experimentalStyled","ListItemRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","styleProps","_extends","listItemOverridesResolver","dense","theme","typography","body1","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","breakpoints","up","body2","React","inProps","ref","tabIndex","useThemeProps","disableGutters","ListItemClasses","role","selected","tabIndexProp","other","_objectWithoutPropertiesLoose","classes","slots","root","composeClasses","useUtilityClasses","disabled","undefined","_jsx","ListItem","components","Root","componentsProps","button","clsx"],"mappings":"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","file":"static/js/13.52d88e36.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n//import useStyles from './styles';\r\nimport moment from 'moment';\r\nimport { requesicoes } from '../../../utils/services';\r\n\r\nlet provincias = [];\r\nlet cidades = [];\r\nfunction BiografiaDetails(props) {\r\n\r\n    const [updateDOM, setUpdateDOM] = useState(false);\r\n\r\n    const { formValues } = props;\r\n    //const classes = useStyles();\r\n    const { apelido,incorporacao, nome, pai, cidade,telemovel,ativo, mae,\r\n         nuit, dataNascimento,sexo, nacionalidade,naturalidade,\r\n          tipoDocumento, numeroDocumento,numero,situacao } = formValues;\r\n\r\n          console.log('nacionalidade',nacionalidade)\r\n\r\n    useEffect(() => {\r\n        init();\r\n    },[]);\r\n    async function init() {\r\n        const [listaProvincias, listaCidades] = await Promise.all([requesicoes().buscarProvincia(), requesicoes().buscarCidades()]);\r\n        provincias = listaProvincias.data;\r\n        cidades = listaCidades.data;\r\n        setUpdateDOM(!updateDOM);\r\n    }\r\n    \r\n    return (\r\n        <Grid item xs={12} sm={12}>\r\n            <Typography variant=\"h6\" gutterBottom >\r\n                Dados Biografico\r\n            </Typography>\r\n            <Typography style={{ lineHeight:'25px' }} >\r\n                \r\n                Codigo:<strong style={{ paddingRight: '65px' }}>{` ${numero?numero:''}`}</strong>\r\n                Apelido:<strong style={{ paddingRight: '60px' }}>{` ${apelido?apelido:''}`}</strong>\r\n                Nome Completo:<strong style={{ paddingRight: '60px' }}>{` ${nome?nome:''} ${apelido?apelido:''}`}</strong>\r\n                Filiação:<strong >{` ${pai?pai:''}`}</strong> e de<strong> {`${mae?mae:''}`}</strong><br />\r\n                Nascido aos: <strong style={{ paddingRight: '24px' }}>{`${moment(dataNascimento?dataNascimento:'').format('DD/MM/YYYY')}`}</strong>\r\n                Portador de:<strong style={{ paddingRight: '24px' }}>{` ${tipoDocumento === 'BI'? 'Bilhete de Identidade':'Passaporte'}`}\r\n                </strong> Número: <strong style={{ paddingRight: '57px' }}> {`${numeroDocumento}`}</strong>\r\n                Nuit:<strong style={{ paddingRight: '24px' }}>{` ${nuit ? nuit:'Pendente'}`}</strong>\r\n                Nocionalidade:<strong style={{ paddingRight: '24px' }}>{` ${nacionalidade?.name ==='Moçambique' && sexo ==='Masculino'?'Moҫambicano':nacionalidade.name ||\r\n                nacionalidade?.name ==='Moçambique' && sexo ==='Femenino'?'Moҫambicana':nacionalidade.name}`}</strong><br/>\r\n                  Natural de :<strong style={{ paddingRight: '77px' }}>{` ${naturalidade.name}`}</strong>\r\n                Distrito de :<strong style={{ paddingRight: '40px' }}>{` ${cidade.name}`}</strong>\r\n                Contacto :<strong style={{ paddingRight: '24px' }}>{` ${telemovel}`}</strong>\r\n                Data de Incorporcao :<strong style={{ paddingRight: '24px' }}>{` ${incorporacao? incorporacao:'Nao Definido'}`}</strong>\r\n                Estudante :<strong style={{ paddingRight: '24px' }}>{` ${ativo? incorporacao:'Nao Definido'}`}</strong>\r\n                Estado :<strong style={{ paddingRight: '24px' }}>{` ${situacao ? situacao:'Nao Definido'}`}</strong>\r\n\r\n\r\n            </Typography>\r\n           \r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default BiografiaDetails;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport {\r\n    Typography, Grid, Container, CardContent,\r\n    Button, MenuItem, TextField, Box, Paper, Card\r\n} from '@material-ui/core';\r\nimport { useLocation } from 'react-router';\r\nimport CryptoJS from 'crypto-js';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport '../teacher/card.css';\r\nimport { requesicoes } from '../../../utils/services';\r\nimport BiografiaDetails from '../ReviewOrder/BiografiaDetails';\r\nimport { MoonLoader } from 'react-spinners'; // Importe o componente BounceLoader\r\n\r\n\r\nlet estudante = {};\r\nlet anosMatricula = [];\r\nlet idDesc = null\r\nlet avaliacoes = [];\r\nlet avaliacoesSemExames = []\r\nlet tiposAvaliacaoOrdemUnicos = []\r\nlet tiposAvaliacaoOrdenados = []\r\nlet listaMatricula = [];\r\n\r\n\r\nconst card = (\r\n    <React.Fragment>\r\n        <CardContent>\r\n            <Typography sx={{ fontSize: 14 }} variant=\"h2\" color=\"text.primary\" gutterBottom>\r\n                Historico Academico\r\n            </Typography>\r\n        </CardContent>\r\n    </React.Fragment>\r\n);\r\n// const secretKey = \"123\"; // Chave secreta para descriptografia\r\n\r\nexport default function Historico(props) {\r\n\r\n    const [isLoadingData, setIsLoadingData] = useState(true);\r\n    const [updateDOM, setUpdateDOM] = useState(false);\r\n    const [initialValues, setInitialValues] = useState({});\r\n    const [cadeirasMatriculdas, setCadeirasMatriculdas] = useState([]); // Use o estado para armazenar as cadeiras da matrícula\r\n    const [anoSelecionado, setAnoSelecionado] = useState(\"\");\r\n    const [updateDom, setUpdateDom] = useState(false);\r\n    const [carregando, setCarregando] = useState(true);\r\n\r\n\r\n\r\n    // const location = useLocation(); // Use useLocation\r\n\r\n    const location = useLocation();\r\n    const encryptedParam = new URLSearchParams(location.search).get('id');\r\n    console.log('===========Chegou aqui com id useParam: ', encryptedParam);\r\n\r\n    useEffect(() => {\r\n        idDesc = decryptParam(encryptedParam);\r\n        init(idDesc);\r\n        setTimeout(() => {\r\n            setCarregando(false);\r\n        }, 2000);\r\n    }, []);\r\n\r\n\r\n    const decryptParam = (encryptedParam) => {\r\n        var myPassword = \"ciam2023\";\r\n        var decrypted = CryptoJS.AES.decrypt(encryptedParam, myPassword);\r\n        return decrypted.toString(CryptoJS.enc.Utf8); \r\n    };\r\n\r\n\r\n\r\n    async function init(idDesc) {\r\n\r\n        const [requestEstudante, listaMatriculaRequest]\r\n            = await Promise.all([requesicoes().getestudanteById(`/${idDesc}?campos=id,nome,situacao,ativo,incorporacao,nuit,numero,apelido,mae,pai,sexo,dataNascimento,email,telemovel,nacionalidade,cidade,naturalidade,tipoDocumento,numeroDocumento,dataEmissao,curriculo.id,curriculo.ano,curso.id,curso.nome`),\r\n            requesicoes().getMatriculaByEstudante(`/${idDesc}`)])\r\n        listaMatricula = listaMatriculaRequest;\r\n        estudante = requestEstudante.data\r\n\r\n        listaMatricula.data.forEach((matricula) => {\r\n            const dataMatricula = matricula.dataMatricula;\r\n            const anoMatricula = new Date(dataMatricula).getFullYear();\r\n\r\n            // Adicionar o ano à lista se ainda não estiver presente\r\n            if (!anosMatricula.includes(anoMatricula)) {\r\n                anosMatricula.push('Todos Anos')\r\n                anosMatricula.push(anoMatricula);\r\n            }\r\n        });\r\n\r\n\r\n        setInitialValues({ ...estudante });\r\n\r\n        setIsLoadingData(false);\r\n        setUpdateDOM(!updateDOM)\r\n\r\n        setCarregando(false);\r\n    }\r\n    function handleBaixar(params) {\r\n\r\n\r\n    }\r\n\r\n    async function handleSearch() {\r\n        setTimeout(() => {\r\n            setCarregando(false);\r\n        }, 2000);\r\n        if (anoSelecionado === 'Todos Anos') {\r\n            // console.log(\"=====Entrou aqui-Deve implemetar buscra todos aproveitamento do estudante\");\r\n            avaliacoes = await Promise.resolve(requesicoes().getAproveitamento(`/${idDesc}`))\r\n\r\n        } else {\r\n            // avaliacoes = await Promise.resolve(requesicoes().getTeste(`/${idDesc}/${anoSelecionado}?campos=id,nota,cadeira.id,cadeira.nome,avaliacao.id,avaliacao.tipoAvaliacao,avaliacao.ordem,estudante.id,estudante.nome,estudante.apelido,estudante.nome,estudante.apelido`))//,  ,,estudante.curso,cadeira\r\n            avaliacoes = await Promise.resolve(requesicoes().getAproveitamento(`/${idDesc}/${anoSelecionado}`))\r\n            //?campos=id,nota,cadeira.id,cadeira.nome,avaliacao.id,avaliacao.tipoAvaliacao,avaliacao.ordem,estudante.id,estudante.nome,estudante.apelido,estudante.nome,estudante.apelido`))//,  ,,estudante.curso,cadeira\r\n\r\n            avaliacoesSemExames = avaliacoes.data.filter(avaliacao => avaliacao.avaliacao.tipoAvaliacao !== 'Exame' && avaliacao.avaliacao.tipoAvaliacao !== 'Rec')\r\n\r\n            if (avaliacoes.data.length === 0) {\r\n                avaliacoes = [{ \"avaliacao\": { \"id\": 260, \"tipoAvaliacao\": \"Teste\", \"ordem\": 1 } }, { \"avaliacao\": { \"id\": 260, \"tipoAvaliacao\": \"Teste\", \"ordem\": 2 } },\r\n                { \"avaliacao\": { \"id\": 260, \"tipoAvaliacao\": \"Trab\", \"ordem\": 1 } }, { \"avaliacao\": { \"id\": 260, \"tipoAvaliacao\": \"Trab\", \"ordem\": 2 } }]\r\n\r\n                tiposAvaliacaoOrdemUnicos = Array.from(new Set(avaliacoes.map(avaliacao => `${avaliacao.avaliacao.tipoAvaliacao}-${avaliacao.avaliacao.ordem}`)));\r\n                const cadeirasMatricula = listaMatricula.data.map(cadeira => cadeira.cadeiras);\r\n                tiposAvaliacaoOrdenados = tiposAvaliacaoOrdemUnicos.length > 0 ? tiposAvaliacaoOrdemUnicos : [\"Teste-1\", \"Teste-2\", \"Trabalho-1\", \"Trabalho-2\"];\r\n                setCadeirasMatriculdas(...cadeirasMatricula);\r\n            } else {\r\n\r\n                // Obter tipos únicos de avaliação e suas ordens do array de avaliações\r\n                tiposAvaliacaoOrdemUnicos = Array.from(new Set(avaliacoesSemExames.map(avaliacao => `${avaliacao.avaliacao.tipoAvaliacao}-${avaliacao.avaliacao.ordem}`)));\r\n                // Separe os tipos de avaliação em \"Teste\" e \"Trabalho\"\r\n                const tiposTeste = tiposAvaliacaoOrdemUnicos.filter(tipo => tipo.startsWith(\"Teste\"));\r\n                const tiposTrabalho = tiposAvaliacaoOrdemUnicos.filter(tipo => tipo.startsWith(\"Trab\"));\r\n                tiposAvaliacaoOrdenados = [...tiposTeste, ...tiposTrabalho];\r\n                setCadeirasMatriculdas(Array.from(new Set(listaMatricula.data.flatMap((m => m.cadeiras.map((cadeira) => cadeira))))))\r\n                setUpdateDom(!updateDom);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const calculateMedia = (notas) => {\r\n        const notasArray = Object.values(notas);\r\n        const notasValidas = notasArray.filter((nota) => nota !== \"\" && nota !== null && !isNaN(parseFloat(nota)));\r\n\r\n        if (notasValidas.length >= 3) {\r\n            const sum = notasValidas.reduce((acc, nota) => acc + parseFloat(nota), 0);\r\n            return (sum / notasValidas.length).toFixed(2);\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n    function handleChange(event) {\r\n        setAnoSelecionado(event.target.value);\r\n\r\n    }\r\n    // if (carregando) return 'Carregando';\r\n\r\n    return (\r\n        <div>\r\n            {carregando ? (\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', marginTop: '20%' }}>\r\n                    <MoonLoader color=\"#36d7b7\" />\r\n                </div>\r\n\r\n            ) : (\r\n                <Container>\r\n                    <Paper >\r\n                        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                            <Container >\r\n                                <br />\r\n\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    <strong>Historico do Estudante</strong>\r\n                                </Typography>\r\n                                <BiografiaDetails formValues={estudante} />\r\n                            </Container>\r\n                            <Button variant=\"contained\" className='ImprimirDados' onClick={handleBaixar}>Imprimir Dados</Button>\r\n                        </Grid>\r\n                    </Paper>\r\n                    <Paper style={{ marginTop: '5px' }}>\r\n\r\n                        <Box sx={{ minWidth: 275 }}>\r\n\r\n                            <Card variant=\"outlined\">\r\n                                <Button variant=\"contained\" style={{ float: 'right' }} className='ImprimirDados' onClick={handleBaixar}>Produzir Caderneta</Button>\r\n\r\n                                {card}\r\n                                <Grid container spacing={2} >\r\n                                    <Grid item xs={12} sm={4} className='selectComponet'>\r\n                                        <TextField className='inputSelect'\r\n                                            type=\"text\" variant=\"outlined\" name=\"turma\"\r\n                                            // error={(errors.turma && touched.turma)}\r\n                                            // helperText={errors.turma}\r\n                                            onChange={handleChange}\r\n                                            select\r\n                                            // value={values.turma} \r\n                                            margin=\"dense\"\r\n                                            id=\"turma\" fullWidth label=\"-- Seleciona Ano Lectivo --\">\r\n                                            {anosMatricula.map(opt => <MenuItem value={opt} key={opt}>{opt === 'Todos Anos' ? 'Todos Anos' : 'Ano Lectivo de ' + opt}</MenuItem>)}\r\n                                        </TextField>\r\n                                        <Button variant=\"contained\" className='btnBuscar' onClick={handleSearch}>Buscar</Button>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* Renderize o Alert quando estiver aberto */}\r\n                                {/* <Alert severity=\"error\" sx={{ marginTop: 2 }} open={alertOpen} onClose={() => setAlertOpen(false)}>\r\n                Por favor, selecione um ano antes de buscar.\r\n            </Alert> */}\r\n                            </Card>\r\n                            {\r\n                                cadeirasMatriculdas.length > 0 &&\r\n                                (<Card variant=\"outlined\" style={{ marginTop: '2%' }}>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>##</TableCell>\r\n                                                    <TableCell>Codigo</TableCell>\r\n                                                    <TableCell>Disciplina</TableCell>\r\n                                                    <TableCell align=\"right\">Ano</TableCell>\r\n                                                    {tiposAvaliacaoOrdenados.map((tipoAvaliacaoOrdem, index) => {\r\n                                                        const [tipoAvaliacao, ordem] = tipoAvaliacaoOrdem.split('-');\r\n                                                        return (\r\n                                                            <TableCell align=\"center\" key={index}>\r\n                                                                {tipoAvaliacao} - {ordem}\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                    <TableCell align=\"right\">Frequência</TableCell>\r\n                                                    <TableCell align=\"right\">Observação</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {\r\n\r\n                                                    cadeirasMatriculdas.map((cadeira, index) => {\r\n\r\n                                                        const notasDisciplina = {}; // Armazena as notas da disciplina\r\n\r\n                                                        // Encontre o objeto de matrícula da disciplina atual\r\n                                                        const matriculaEstudante = listaMatricula.data.find(matricula => matricula.cadeiras.some(cadeiraMat => cadeiraMat.nome === cadeira.nome));\r\n\r\n                                                        // Preenche notasDisciplina com as notas da disciplina atual\r\n                                                        tiposAvaliacaoOrdemUnicos.forEach((tipoAvaliacaoOrdem) => {\r\n                                                            const [tipoAvaliacao, ordem] = tipoAvaliacaoOrdem.split('-');\r\n                                                            const avaliacao = avaliacoesSemExames?.find(avaliacao => avaliacao.avaliacao.tipoAvaliacao === tipoAvaliacao && avaliacao.avaliacao.ordem === parseInt(ordem) && avaliacao.cadeira.nome === cadeira.nome);\r\n\r\n                                                            if (avaliacao && avaliacao.avaliacao.ordem !== null) {\r\n                                                                notasDisciplina[tipoAvaliacaoOrdem] = avaliacao.nota;\r\n                                                            } else {\r\n                                                                notasDisciplina[tipoAvaliacaoOrdem] = null;\r\n                                                            }\r\n                                                        });\r\n\r\n                                                        return (\r\n                                                            <TableRow key={index}>\r\n                                                                <TableCell>\r\n                                                                    {index + 1}\r\n                                                                </TableCell>\r\n                                                                <TableCell>\r\n                                                                    {cadeira.codigo}\r\n                                                                </TableCell>\r\n                                                                <TableCell>\r\n                                                                    {cadeira.nome}\r\n                                                                </TableCell>\r\n                                                                {/* Preencha a coluna \"Ano\" com o valor de anoFrequencia da matrícula */}\r\n                                                                <TableCell align=\"right\">\r\n                                                                    {matriculaEstudante ? matriculaEstudante.anoFrequencia === 'Primeiro' ? '1' : matriculaEstudante.anoFrequencia === 'Segundo' ? '2' : matriculaEstudante.anoFrequencia === 'Terceiro' ? '3' : matriculaEstudante.anoFrequencia === 'Quarto' ? '4' : '5' : ''}\r\n                                                                </TableCell>\r\n                                                                {/* Adicione outras células com os valores apropriados, como notas, conforme necessário */}\r\n                                                                {tiposAvaliacaoOrdemUnicos.map((tipoAvaliacaoOrdem, index) => (\r\n                                                                    <TableCell key={index} align='center' style={{ color: notasDisciplina[tipoAvaliacaoOrdem] <= 9.5 ? 'red' : 'inherit' }}>\r\n                                                                        {notasDisciplina[tipoAvaliacaoOrdem]}\r\n                                                                    </TableCell>\r\n                                                                ))}\r\n                                                                <TableCell align=\"right\">\r\n                                                                    {calculateMedia(\r\n                                                                        tiposAvaliacaoOrdemUnicos.map(tipoAvaliacaoOrdem => notasDisciplina[tipoAvaliacaoOrdem])\r\n\r\n                                                                    )}\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\" style={{\r\n                                                                    color: calculateMedia(\r\n                                                                        tiposAvaliacaoOrdemUnicos.map(tipoAvaliacaoOrdem => notasDisciplina[tipoAvaliacaoOrdem])\r\n                                                                    ) < 9.5 ? 'red' : calculateMedia(\r\n                                                                        tiposAvaliacaoOrdemUnicos.map(tipoAvaliacaoOrdem => notasDisciplina[tipoAvaliacaoOrdem])\r\n                                                                    ) >= 13.5 ? '#3CB371' : ''\r\n                                                                }}>\r\n\r\n                                                                    {\r\n                                                                        calculateMedia(\r\n                                                                            tiposAvaliacaoOrdemUnicos.map(tipoAvaliacaoOrdem => notasDisciplina[tipoAvaliacaoOrdem])\r\n                                                                        ) !== '' ?\r\n                                                                            calculateMedia(\r\n                                                                                tiposAvaliacaoOrdemUnicos.map(tipoAvaliacaoOrdem => notasDisciplina[tipoAvaliacaoOrdem])\r\n                                                                            ) < 9.5 ? 'Excluido' : calculateMedia(\r\n                                                                                tiposAvaliacaoOrdemUnicos.map(tipoAvaliacaoOrdem => notasDisciplina[tipoAvaliacaoOrdem])\r\n                                                                            ) >= 13.5 ? 'Dispensado' : 'Admitido' : ''\r\n                                                                    }\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        );\r\n                                                    })}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Card>)\r\n                            }\r\n                        </Box>\r\n                    </Paper>\r\n\r\n                </Container>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'gutters', 'selected', 'dense']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled, { rootShouldForwardProp } from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport ListItem from '../ListItem';\nimport { overridesResolver as listItemOverridesResolver, ListItemRoot } from '../ListItem/ListItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    selected,\n    dense,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', selected && 'selected', dense && 'dense']\n  };\n  return composeClasses(slots, getMenuItemUtilityClass, classes);\n};\n\nconst MenuItemRoot = experimentalStyled(ListItemRoot, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, listItemOverridesResolver(props, styles), styleProps.dense && styles.dense);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({}, theme.typography.body1, {\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  width: 'auto',\n  whiteSpace: 'nowrap',\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, styleProps.dense && _extends({}, theme.typography.body2, {\n  minHeight: 'auto'\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    className,\n    component = 'li',\n    dense = false,\n    disableGutters = false,\n    ListItemClasses,\n    role = 'menuitem',\n    selected,\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"dense\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  const styleProps = {\n    dense\n  };\n  const classes = useUtilityClasses(props);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListItem, _extends({\n    components: {\n      Root: MenuItemRoot\n    },\n    componentsProps: {\n      root: {\n        styleProps\n      }\n    },\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    classes: ListItemClasses\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default MenuItem;"],"sourceRoot":""}