{"version":3,"sources":["views/utilities/icons/index.js","views/forms/teacher/pauta.js","views/utilities/images/LogoAM.png"],"names":["DownloadIcon","onClick","className","estudantes","cursos","testes","avaliacoes","cadeira","curso","notaExame","notaExameRec","tiposAvaliacaoParaRemover","contemValoresExameRecorencia","semNotasdeExames","comNotaExameNormal","comDoiesExames","makeStyles","theme","root","backgroundColor","PautaCadeira","location","useLocation","idCadeira","atob","parse","search","turma","idCurso","id","window","href","split","length","useState","updateDom","setUpdateDom","notas","setNotas","carregando","setCarregando","a","Promise","all","requesicoes","getAvaliacoesByCadeiraAndTurma","buscarCurso","getEstudanteTurma","getCadeiraById","getTesteByCurso","avaliacoesRequest","cursoRequest","listaEstudantes","cadeiraRequest","testeRequest","data","filter","map","c","nome","objeto","tipoAvaliacao","testesPorEstudante","forEach","teste","estudanteId","undefined","estudante","avaliacao","find","ordem","avaliacaoId","nota","error","Object","values","useEffect","init","getMediaClass","media","parseFloat","getResultadoClass","obs","calculateMedia","novoObjeto","avaliacaoCorrespondente","parseInt","notasValidas","isNaN","reduce","acc","toFixed","calcularMediaExame","frequenciaEstudante","notaRecorrencia","console","log","notaExameFloat","notaRecorrenciaFloat","Alert","severity","i","every","valor","some","notaEstudante","NaN","numero","apelido","doc","jsPDF","orientation","unit","format","pageWidth","internal","pageSize","width","columnsTeste","columnsExameRecorrencia","columns","notaFrequencia","resultado","separados","exame","push","outros","avaliacoesExame","avaliacoesNotas1","avaliacoesNotas2","imgX","addImage","LogoAM","headerYPosition","setFontSize","centerX","text","align","footer","Date","getFullYear","footerYPosition","height","infoEsquerda","departamento","infoEsquerda1","infoEsquerda2","ano","infoEsquerda1Y","infoDireita","infoDireita1","anoLectivo","infoDireita2","infoDireitaTextWidth","getStringUnitWidth","getFontSize","scaleFactor","infoDireitaX","getWidth","infoDireitaY","autoTable","head","body","startY","textStartY","previous","finalY","infoEsquerdaA2","infoEsquerdaAY","infoDireitaA","infoDireitaA2","infoDireitaWidth","infoDireitaAX","infoDireitaAY","infoEsquerdaAX","save"],"mappings":"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","file":"static/js/34.0753ae9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst DownloadIcon = ({ onClick }) => {\r\n    return (\r\n      <div className=\"download-icon\" onClick={onClick}>\r\n        <FileDownloadIcon />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default DownloadIcon;","\r\nimport { parse } from 'query-string';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { requesicoes } from '../../../utils/services';\r\nimport '../pauta/pautaCadeira.scss';\r\nimport '../pauta/pauta.css';\r\nimport { makeStyles, } from '@material-ui/core/styles';\r\nimport DownloadIcon from '../../utilities/icons';\r\nimport LogoAM from '../../utilities/images/LogoAM.png'\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { Alert } from '@mui/material';\r\n\r\n\r\n\r\nlet estudantes = [];\r\nlet cursos = [];\r\nlet testes = [];\r\nlet avaliacoes = [];\r\nlet avaliacoesExame = [];\r\nlet cadeira = '';\r\nlet curso = '';\r\nlet notaExame = ''\r\nlet notaExameRec = ''\r\nlet tiposAvaliacaoParaRemover = ['Exame', 'Rec'];\r\nlet contemValoresExameRecorencia = '';\r\nlet semNotasdeExames = '';\r\nlet comNotaExameNormal = '';\r\nlet comDoiesExames = '';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\nconst PautaCadeira = () => {\r\n\r\n    const location = useLocation();\r\n    const idCadeira = atob(parse(location.search).cadeira);\r\n    const turma = atob(parse(location.search).turma);\r\n    const idCurso = atob(parse(location.search).curso);\r\n\r\n    let id = window.location.href.split('/');\r\n    id = (id[id.length - 1]);\r\n\r\n    const [updateDom, setUpdateDom] = useState(false);\r\n    const [notas, setNotas] = useState([]);\r\n    const [carregando, setCarregando] = useState(true);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [])\r\n\r\n\r\n    async function init() {\r\n        setCarregando(true);\r\n        const [avaliacoesRequest, cursoRequest, listaEstudantes, cadeiraRequest, testeRequest] = await Promise.all([\r\n            requesicoes().getAvaliacoesByCadeiraAndTurma(`/${idCadeira}/${turma}`),\r\n            requesicoes().buscarCurso('?campos=id,nome'),\r\n            requesicoes().getEstudanteTurma(`/${turma}/${idCadeira}?campos=nome,id,apelido,numero,matricula.id,matricula.dataMatricula,matricula.anoFrequencia,matricula.turma,curso.id,curso.nome`),\r\n            requesicoes().getCadeiraById(`/${idCadeira}`),\r\n            requesicoes().getTesteByCurso(`/${idCurso}/${idCadeira}?campos=id,nota,avaliacao.tipoAvaliacao,avaliacao.ordem,avaliacao.id,avaliacao.cadeira.id,avaliacao.cadeira.nome,estudante.id,estudante.nome,estudante.apelido,estudante.numero`)]);//estudante.matricula\r\n        cursos = cursoRequest.data.filter(curso => curso.id == idCurso);\r\n        estudantes = listaEstudantes.data;\r\n        testes = testeRequest.data;\r\n        avaliacoes = avaliacoesRequest.data;\r\n        cadeira = cadeiraRequest.data;\r\n        curso = cursos.map(c => c.nome)\r\n        avaliacoesExame = avaliacoes.filter(objeto => objeto.tipoAvaliacao === 'Exame' || objeto.tipoAvaliacao === 'Rec');\r\n\r\n        const testesPorEstudante = {};\r\n        testes.forEach((teste) => {\r\n\r\n            const estudanteId = teste.estudante === undefined ? teste.id : teste.estudante.id;\r\n\r\n            if (!testesPorEstudante[estudanteId]) {\r\n\r\n                testesPorEstudante[estudanteId] = { ...teste, notas: {} };\r\n\r\n            }\r\n            try {\r\n                const avaliacao = avaliacoes.find(\r\n                    (a) =>\r\n                        //O problema eh aqui\r\n                        (a.tipoAvaliacao === teste.avaliacao.tipoAvaliacao && a.ordem === teste.avaliacao.ordem)\r\n\r\n\r\n                );\r\n                const avaliacaoId = avaliacao ? avaliacao.id : avaliacao.id;// ou null\r\n                testesPorEstudante[estudanteId].notas[avaliacaoId] = teste.nota || \"\";\r\n\r\n\r\n\r\n            } catch (error) {\r\n                const avaliacao = avaliacoes.find(\r\n                    (a) =>\r\n\r\n                        a.tipoAvaliacao === 'Teste' && a.ordem === 1\r\n                );\r\n                const avaliacaoId = avaliacao ? avaliacao.id : null;\r\n                testesPorEstudante[estudanteId].notas[avaliacaoId] = teste.nota || \"\";\r\n\r\n\r\n            }\r\n\r\n        });\r\n\r\n        setNotas(Object.values(testesPorEstudante));\r\n        setUpdateDom(!updateDom);\r\n\r\n        setCarregando(false);\r\n    }\r\n    const getMediaClass = (media) => {\r\n        return media !== \"\" && parseFloat(media) < 9.5 ? \"media-red\" : \"\";\r\n    };\r\n    const getExameClass = (media) => {\r\n\r\n        return media !== \"\" && parseFloat(media) < 9 ? \"media-red\" : \"\";\r\n    };\r\n\r\n    const getResultadoClass = (obs) => {\r\n        return obs === 'Excluido' || obs === 'Reprovado' ? \"media-red\" : \"\";\r\n    };\r\n\r\n    const calculateMedia = (notas) => {\r\n\r\n        const novoObjeto = {};\r\n        for (const id in notas) {\r\n            const avaliacaoCorrespondente = avaliacoes.find(avaliacao => avaliacao.id === parseInt(id));\r\n            if (!avaliacaoCorrespondente || (avaliacaoCorrespondente.tipoAvaliacao !== 'Exame' && avaliacaoCorrespondente.tipoAvaliacao !== 'Rec')) {\r\n                novoObjeto[id] = notas[id];\r\n            }\r\n        }\r\n        const notasArray = Object.values(novoObjeto);\r\n        const notasValidas = notasArray.filter((nota) => nota !== \"\" && nota !== null && !isNaN(parseFloat(nota)));\r\n\r\n        if (notasValidas.length >= 3) {\r\n            const sum = notasValidas.reduce((acc, nota) => acc + parseFloat(nota), 0);\r\n            return (sum / notasValidas.length).toFixed(2);\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n    const calcularMediaExame = (frequenciaEstudante, notaExame, notaRecorrencia) => {\r\n        console.log('Parametros: ', frequenciaEstudante, notaExame, notaExameRec)\r\n        const notaExameFloat = parseFloat(notaExame);\r\n        const notaRecorrenciaFloat = parseFloat(notaRecorrencia);\r\n\r\n        if (!isNaN(notaExameFloat) && isNaN(notaRecorrenciaFloat)) {\r\n\r\n            if (notaExameFloat < 8) {\r\n                if (notaRecorrenciaFloat) {\r\n                    return ((parseFloat(frequenciaEstudante) * 0.6 + 0.4 * notaRecorrenciaFloat)).toFixed(0);\r\n                }\r\n\r\n                return (notaExameFloat)\r\n            }\r\n\r\n            return ((parseFloat(frequenciaEstudante) * 0.6 + 0.4 * notaExameFloat)).toFixed(0);\r\n        }\r\n\r\n        if (!isNaN(notaRecorrenciaFloat)) {\r\n\r\n            return ((parseFloat(frequenciaEstudante) * 0.6 + 0.4 * notaRecorrenciaFloat)).toFixed(0);\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n    const handleDownloadPDF = () => {\r\n\r\n        const doc = new jsPDF({\r\n            orientation: 'landscape',\r\n            unit: 'mm',\r\n            format: 'a4',\r\n        });\r\n\r\n        // Ajusta a largura total da página\r\n        const pageWidth = doc.internal.pageSize.width;\r\n        // Colunas para avaliações do tipo \"Teste\"\r\n        const columnsTeste = ['Código', 'Nome Completo', ...avaliacoes\r\n            .filter(a => a.tipoAvaliacao === 'Teste' || a.tipoAvaliacao === 'Trab')\r\n            .map(a => `${a.tipoAvaliacao} ${a.ordem === null ? '' : a.ordem}`)\r\n        ];\r\n\r\n        // Colunas para avaliações do tipo \"Exame\" e \"Recorrência\"\r\n        const columnsExameRecorrencia = ['Freq', 'Observação', ...avaliacoes\r\n            .filter(a => a.tipoAvaliacao === 'Exame' || a.tipoAvaliacao === 'Rec')\r\n            .map(a => `${a.tipoAvaliacao} ${a.tipoAvaliacao === 'Rec' ? '' : ''}`)\r\n        ];\r\n\r\n\r\n\r\n        // Combinação das colunas na ordem desejada\r\n        const columns = [\r\n            ...columnsTeste,\r\n            ...(contemValoresExameRecorencia ? [\r\n                ...columnsExameRecorrencia,\r\n                'M Final',\r\n                'Resultado'\r\n            ] : ['Freq', 'Observação'])\r\n        ];\r\n        /* const columns = [\r\n             ...columnsTeste,\r\n             ...columnsExameRecorrencia,\r\n             'M Final',\r\n             'Resultado'\r\n         ];*/\r\n\r\n\r\n        // Mapeia os dados das notas para o PDF\r\n        const data = notas.map((notaEstudante) => {\r\n\r\n            const notaFrequencia = calculateMedia(notaEstudante.notas);\r\n            const resultado = notaFrequencia <= 9.5 ? 'Excluido' : notaFrequencia >= 13.5 ? 'Dispensado' : 'Admitido';\r\n            const separados = avaliacoes.reduce((separados, avaliacao) => {\r\n                if (avaliacao.tipoAvaliacao === \"Exame\" || avaliacao.tipoAvaliacao === 'Rec') {\r\n                    separados.exame.push(avaliacao);\r\n                } else {\r\n                    separados.outros.push(avaliacao);\r\n                }\r\n                return separados;\r\n            }, { exame: [], outros: [] });\r\n\r\n            const avaliacoesExame = separados.exame;\r\n            const outrasAvaliacoes = separados.outros;\r\n            const avaliacoesNotas1 = outrasAvaliacoes.map(avaliacao => notaEstudante.notas[avaliacao.id] || '');\r\n            const avaliacoesNotas2 = avaliacoesExame.map(avaliacao => notaEstudante.notas[avaliacao.id] || '');\r\n\r\n            notaExameRec = parseFloat(testes.find(teste => teste.avaliacao.tipoAvaliacao === 'Rec' && teste.avaliacao.ordem === null && teste.estudante.id === notaEstudante.estudante.id)?.nota || '');\r\n            notaExame = parseFloat(testes.find(teste => teste.avaliacao.tipoAvaliacao === 'Exame' && teste.avaliacao.ordem === null && teste.estudante.id === notaEstudante.estudante.id)?.nota || '');\r\n\r\n            const rowData = [\r\n                //Código\r\n                notaEstudante.estudante === undefined ? notaEstudante.numero : notaEstudante.estudante.numero,\r\n                //Nome Completo\r\n                `${notaEstudante.estudante === undefined ? notaEstudante.nome : notaEstudante.estudante.nome} ${notaEstudante.estudante === undefined ? notaEstudante.apelido : notaEstudante.estudante.apelido}`,\r\n                //Avaliacoes\r\n                ...avaliacoesNotas1,\r\n                //Freq\r\n                notaFrequencia,\r\n                //Obs\r\n                resultado,\r\n                //Exames\r\n                ...avaliacoesNotas2,\r\n                //M Final\r\n                resultado && resultado === 'Excluido' ? parseFloat(notaFrequencia).toFixed(0) : resultado === 'Dispensado' ? parseFloat(notaFrequencia).toFixed(0) :\r\n                    !isNaN(notaExame) && isNaN(notaExameRec) ? calcularMediaExame(notaFrequencia, notaExame, notaExameRec) >= 10 ?\r\n                        calcularMediaExame(notaFrequencia, notaExame, notaExameRec) : '' : calcularMediaExame(notaFrequencia, notaExame = NaN, notaExameRec) >= 10 ?\r\n                        calcularMediaExame(notaFrequencia, notaExame = NaN, notaExameRec) : calcularMediaExame(notaFrequencia, notaExame = NaN, notaExameRec),\r\n                //Resultado\r\n                resultado && resultado === 'Excluido' ? 'Reprovado' : resultado === 'Dispensado' ? 'Aprovado' : resultado === 'Admitido' ? !isNaN(notaExame) && isNaN(notaExameRec) ? calcularMediaExame(notaFrequencia, notaExame, notaExameRec) >= 10 ? 'Aprovado' : 'Recorrência' : calcularMediaExame(notaFrequencia, notaExame = NaN, notaExameRec) >= 10 ? 'Aprovado' : 'Reprovado' : '???'\r\n                //     resultado && resultado === 'Excluido' ? 'Reprovado' :  resultado === 'Dispensado' ? 'Aprovado' :resultado ==='Admitido'? !isNaN(notaExame) && isNaN(notaExameRec) ?\r\n                //          ? 'Aprovado' : '' : calcularMediaExame(notaFrequencia, notaExame = NaN, notaExameRec) >= 10 ? 'Aprovado' : 'Reprovado'\r\n                // \r\n            ];\r\n\r\n            return rowData;\r\n        });\r\n\r\n        // Adiciona a imagem ao PDF antes do cabeçalho\r\n        const imgWidth = 15;\r\n        const imgHeight = 15;\r\n        const imgX = (pageWidth - imgWidth) / 2;\r\n        const imgY = 10;\r\n        doc.addImage(LogoAM, 'png', imgX, imgY, imgWidth, imgHeight);\r\n\r\n        // Define o cabeçalho com três linhas\r\n        const headerLine1 = 'Academia “Militar Marechal Samora Machel”';\r\n        const headerLine2 = 'Direcção Pedagógica';\r\n        const headerLine3 = 'Serviço de Registo Académico e Estatística';\r\n        const lineHeight = 7;\r\n        const headerYPosition = 30;\r\n\r\n        doc.setFontSize(14);\r\n        // Centraliza o texto horizontalmente\r\n        const centerX = doc.internal.pageSize.width / 2;\r\n\r\n        doc.text(headerLine1, centerX, headerYPosition, { align: 'center' });\r\n        doc.text(headerLine2, centerX, headerYPosition + lineHeight, { align: 'center' });\r\n        doc.text(headerLine3, centerX, headerYPosition + lineHeight * 2, { align: 'center' });\r\n\r\n        // Define o rodapé\r\n        const footer = `Processado por: SiGUAM_V1.0.0 © ${new Date().getFullYear()}`;\r\n        const footerYPosition = doc.internal.pageSize.height - 10;\r\n        doc.setFontSize(10);\r\n        doc.text(footer, centerX, footerYPosition, { align: 'center' });\r\n\r\n        // Adiciona informações à esquerda da tabela\r\n        const infoEsquerda = `Departamento:${cadeira.departamento.nome}`;// \r\n        const infoEsquerda1 = `Curso: ${curso[0]}${avaliacoes[0].turma.turma.turma !== 'Unica' ? '-' + avaliacoes[0].turma.turma.turma : ''}`;\r\n        const infoEsquerda2 = `Ano: ${avaliacoes[0].turma.turma.ano === 'Primeiro' ? '1o Ano' : avaliacoes[0].turma.turma.ano === 'Segundo' ? '2o Ano' : avaliacoes[0].turma.turma.ano === 'Terceiro' ? '3o Ano' : avaliacoes[0].turma.turma.ano === 'Quarto' ? '4o Ano' : '5o Ano'}`;\r\n        const infoEsquerdaX = 20;\r\n        const infoEsquerdaY = headerYPosition + lineHeight * 4;\r\n        // const infoEsquerdaTextWidth = doc.getStringUnitWidth(infoEsquerda) * doc.internal.getFontSize() / doc.internal.scaleFactor;\r\n        doc.setFontSize(12);\r\n        doc.text(infoEsquerda, infoEsquerdaX, infoEsquerdaY);\r\n        const infoEsquerda1X = 20;\r\n        const infoEsquerda1Y = headerYPosition + lineHeight * 4;\r\n        doc.setFontSize(12);\r\n        doc.text(infoEsquerda1, infoEsquerda1X, infoEsquerda1Y + 5);\r\n        doc.setFontSize(12);\r\n        doc.text(infoEsquerda2, infoEsquerda1X, infoEsquerda1Y + 10);\r\n\r\n\r\n        // Adiciona informações à direita da tabela\r\n        const infoDireita = `Disciplina: ${cadeira.nome}`;\r\n        const infoDireita1 = `Ano Lectivo: ${avaliacoes[0].turma.anoLectivo}`;\r\n        const infoDireita2 = `Orgânica: ${estudantes.length}`;\r\n        const infoDireitaTextWidth = doc.getStringUnitWidth(infoDireita) * doc.internal.getFontSize() / doc.internal.scaleFactor;\r\n        const infoDireitaX = doc.internal.pageSize.getWidth() - infoDireitaTextWidth - 20; // Posição X para informações à direita\r\n        const infoDireitaY = headerYPosition + lineHeight * 4; // Posição Y para informações à direita\r\n        doc.setFontSize(12);\r\n        doc.text(infoDireita, infoDireitaX, infoDireitaY);\r\n        doc.setFontSize(12);\r\n        doc.text(infoDireita1, infoDireitaX, infoDireitaY + 5);\r\n        doc.setFontSize(12);\r\n        doc.text(infoDireita2, infoDireitaX, infoDireitaY + 10);\r\n\r\n\r\n\r\n        // Adiciona a tabela ao PDF\r\n        doc.autoTable({ head: [columns], body: data, startY: headerYPosition + lineHeight * 6 });\r\n\r\n        // Calcula a posição de início do texto após a tabela\r\n        const textStartY = doc.autoTable.previous.finalY + 10; // Ajuste o valor de 10 conforme necessário para o espaço desejado entre a tabela e o texto\r\n\r\n        // Adiciona informações à esquerda\r\n        const infoEsquerdaA = \"Docente:\";\r\n        const infoEsquerdaA1 = \"_____________________________\";\r\n        const infoEsquerdaA2 = `Data: ____/____/ ${avaliacoes[0].turma.anoLectivo}`;\r\n\r\n        const infoEsquerdaAX = 20; // Posição X para informações à esquerda\r\n\r\n        const infoEsquerdaAY = textStartY;\r\n\r\n        // Adiciona informações à direita\r\n        const infoDireitaA = \"O Chefe do Departamento:\";\r\n        const infoDireitaA1 = \"_____________________________\";\r\n        const infoDireitaA2 = `Data: ____/____/ ${avaliacoes[0].turma.anoLectivo}`;\r\n        const infoDireitaWidth = doc.getStringUnitWidth(infoDireitaA) * doc.internal.getFontSize() / doc.internal.scaleFactor; // Largura do texto\r\n        const infoDireitaAX = doc.internal.pageSize.getWidth() - infoDireitaWidth - 20; // Posição X para informações à direita (largura da página - largura do texto - margem)\r\n        const infoDireitaAY = textStartY;\r\n\r\n        doc.setFontSize(12);\r\n\r\n        // Adiciona informações à esquerda\r\n        doc.text(infoEsquerdaA, infoEsquerdaAX + 20, infoEsquerdaAY);\r\n        doc.text(infoEsquerdaA1, infoEsquerdaAX, infoEsquerdaAY + 10);\r\n        doc.text(infoEsquerdaA2, infoEsquerdaAX + 10, infoEsquerdaAY + 15);\r\n\r\n\r\n        // Adiciona informações à direita\r\n        doc.text(infoDireitaA, infoDireitaAX, infoDireitaAY, { align: 'right' });\r\n        doc.text(infoDireitaA1, infoDireitaAX + 5, infoDireitaAY + 10, { align: 'right' });\r\n        doc.text(infoDireitaA2, infoDireitaAX - 5, infoDireitaAY + 15, { align: 'right' });\r\n\r\n\r\n        // Salva o PDF com o nome \"pauta_cadeira.pdf\"\r\n        doc.save('pauta.pdf');\r\n    };\r\n    if (carregando) return 'Carregando';\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                testes.length === 0 ? (\r\n                    <div>\r\n                        <Alert severity=\"warning\">Esta cadeira ainda não possui notas. Se for algum engano Porfavor contacte o seu Departamento ou CIAM</Alert>\r\n\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <table className=\"AppTable\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Numero</th>\r\n                                    <th>Nome Completo</th>\r\n\r\n                                    {avaliacoes.map((a, i) => {\r\n                                        contemValoresExameRecorencia = tiposAvaliacaoParaRemover.every(valor => avaliacoes.some(a => a.tipoAvaliacao === valor));\r\n                                        return (<th className=\"right\">{a.tipoAvaliacao} {a.tipoAvaliacao !== 'Exame' ? a.tipoAvaliacao === 'Rec' ? '' : '-' : ''} {a.ordem} </th>)\r\n                                    })}\r\n\r\n                                    <th className=\"right\">Freq</th>\r\n                                    <th className=\"right\">Obs</th>\r\n                                    {contemValoresExameRecorencia && (\r\n                                        <>\r\n                                            <th className=\"right\">M. Final</th>\r\n                                            <th className=\"right\">Res Final</th>\r\n                                        </>\r\n                                    )}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {notas.map((notaEstudante) => {\r\n\r\n                                    const frequenciaEstudante = calculateMedia(notaEstudante.notas);\r\n                                    const obs = frequenciaEstudante <= 9.5 ? 'Excluido' : frequenciaEstudante >= 13.5 ? 'Dispensado' : 'Admitido';\r\n                                    notaExameRec = parseFloat(testes.find(teste => teste.avaliacao?.tipoAvaliacao === 'Rec' && teste.avaliacao.ordem === null && teste.estudante.id === notaEstudante.estudante.id)?.nota || '');\r\n                                    notaExame = parseFloat(testes.find(teste => teste.avaliacao?.tipoAvaliacao === 'Exame' && teste.avaliacao.ordem === null && teste.estudante.id === notaEstudante.estudante.id)?.nota || '');\r\n                                    semNotasdeExames = isNaN(notaExame) && isNaN(notaExameRec) && parseFloat(frequenciaEstudante).toFixed(0)\r\n                                    comNotaExameNormal = !isNaN(notaExame) && isNaN(notaExameRec) && !semNotasdeExames && calcularMediaExame(frequenciaEstudante, notaExame, notaExameRec = NaN) >= 10 && calcularMediaExame(frequenciaEstudante, notaExame, notaExameRec = NaN)\r\n                                    //!isNaN(notaExame) && isNaN(notaExameRec) && >=10 && calcularMediaExame(frequenciaEstudante,notaExame)>=10\r\n                                    comDoiesExames = !isNaN(notaExame) && !isNaN(notaExameRec) && calcularMediaExame(frequenciaEstudante, notaExame = NaN, notaExameRec) >= 10 && calcularMediaExame(frequenciaEstudante, notaExame = NaN, notaExameRec) || isNaN(notaExame) && !isNaN(notaExameRec) && calcularMediaExame(frequenciaEstudante, notaExame = NaN, notaExameRec) < 10 && calcularMediaExame(frequenciaEstudante, notaExame = NaN, notaExameRec)\r\n                                    return (\r\n                                        <tr key={notaEstudante.estudante === undefined ? notaEstudante.id : notaEstudante.estudante.id}>\r\n                                            <td>{notaEstudante.estudante === undefined ? notaEstudante.numero : notaEstudante.estudante.numero}</td>\r\n                                            <td>\r\n                                                {notaEstudante.estudante === undefined ? notaEstudante.nome : notaEstudante.estudante.nome} {notaEstudante.estudante === undefined ? notaEstudante.apelido : notaEstudante.estudante.apelido}\r\n                                            </td>\r\n                                            {avaliacoes.map((avaliacao) => {\r\n                                                const avaliacaoId = avaliacao.id;\r\n                                                const nota =\r\n                                                    notaEstudante.notas[avaliacaoId] !== undefined\r\n                                                        ? notaEstudante.notas[avaliacaoId]\r\n                                                        : \"\";\r\n\r\n                                                return (\r\n                                                    <td key={avaliacaoId} className={`right ${getMediaClass(nota)}`}>\r\n                                                        {nota}\r\n                                                    </td>\r\n                                                );\r\n                                            })}\r\n                                            {/* Freq */}\r\n                                            <td className={`right ${getMediaClass(frequenciaEstudante)}`}>{frequenciaEstudante}</td>\r\n                                            {/* Obs */}\r\n                                            <td className={`right ${getResultadoClass(obs)}`}>{obs}</td>\r\n\r\n                                            {contemValoresExameRecorencia && (\r\n                                                <>\r\n                                                    {/* M. Final */}\r\n                                                    <td className='right'>\r\n                                                        {\r\n                                                            //Sem notas de exame\r\n                                                            semNotasdeExames ||\r\n                                                            //Somente com notas de exame\r\n                                                            comNotaExameNormal ||\r\n                                                            //Com as 2 notas de exame\r\n                                                            comDoiesExames\r\n                                                        }\r\n                                                    </td>\r\n                                                    {/* Res Final */}\r\n                                                    <td className={`right ${getResultadoClass(obs)}`}>\r\n                                                        {\r\n                                                            comNotaExameNormal !== '' && (semNotasdeExames && semNotasdeExames < 10 && 'Reprovado' || semNotasdeExames >= 14 && 'Aprovado') || comNotaExameNormal === '' && '' ||\r\n                                                            !semNotasdeExames && !comNotaExameNormal && !comDoiesExames && 'Recorrência' || comNotaExameNormal && 'Aprovado' ||\r\n                                                            comDoiesExames && calcularMediaExame(frequenciaEstudante, notaExame = NaN, notaExameRec) >= 10 && 'Aprovado' || parseFloat(comDoiesExames) < 10 && 'Reprovado'\r\n                                                        }\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <DownloadIcon onClick={handleDownloadPDF} />\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default PautaCadeira","export default __webpack_public_path__ + \"static/media/LogoAM.8a28d798.png\";"],"sourceRoot":""}