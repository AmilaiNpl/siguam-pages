{"version":3,"sources":["views/dashboard/Default.js","ui-component/cards/TotalChartCard/index.js","ui-component/cards/TotalIncomePatternCard/index.js","ui-component/cards/TotalIncomeCard/index.js","ui-component/cards/PopularCard/support-chart.js","ui-component/cards/PopularCard/BajajCard.js","ui-component/cards/PopularCard/index.js","assets/images/icons/earning.svg","ui-component/cards/EarningCard/index.js","ui-component/cards/ChartCard/chart/bar-chart.js","ui-component/cards/ChartCard/index.js"],"names":["Dashboard","useState","carregando","setCarregando","useEffect","authService","getCurrentUser","setTimeout","container","spacing","gridSpacing","style","display","justifyContent","alignItems","width","marginTop","color","item","xs","lg","md","sm","authorities","useStyles","makeStyles","theme","card","backgroundColor","palette","primary","main","overflow","position","content","height","dark","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","typography","commonAvatar","largeAvatar","avatarRight","mediumAvatar","zIndex","cardHeading","fontSize","fontWeight","marginRight","marginBottom","subHeading","avatarCricle","smallAvatar","cursor","circleIcon","transform","menuItem","qtdActivo","TotalChartCard","classes","anchorEl","setAnchorEl","updateDOM","setUpdateDOM","handleClose","a","Promise","resolve","reject","requesicoes","getQtdEstudanteActivo","then","catch","init","className","direction","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","data","light","background","secondary","paddingTop","paddingBottom","TotalIncomePatternCard","disableGutters","warning","grey","TotalIncomeCard","chartData","type","options","chart","sparkline","enabled","dataLabels","colors","value","stroke","curve","tooltip","fixed","x","show","y","title","formatter","seriesName","marker","series","orange","contentContainer","errorLight","fontStyle","BajajCard","Card","CardContent","Grid","Typography","supportChart","cardAction","primaryLight","divider","avatarSuccess","success","marginLeft","successDark","avatarError","errorDark","cursos","PopularCard","React","all","buscarCurso","getAproveitamento","cursoRequest","aprovetamentoRequest","console","log","alignContent","Menu","MenuItem","Avatar","CardActions","Button","size","disableElevation","purple","qtdEstudante","EarningCard","getQtdEstudante","src","EarningIcon","alt","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","xaxis","categories","labels","yaxis","fontFamily","useSeriesColors","markers","radius","itemMargin","fill","grid","name","status","label","ChartCard","setValue","useTheme","barChart","borderColor","TextField","select","onChange","e","target","map","option"],"mappings":"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","file":"static/js/35.e4c2b73b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { gridSpacing } from '../../store/constant';\r\nimport EarningCard from '../../ui-component/cards/EarningCard';\r\nimport TotalChartCard from '../../ui-component/cards/TotalChartCard';\r\nimport TotalIncomePatternCard from '../../ui-component/cards/TotalIncomePatternCard';\r\nimport TotalIncomeCard from '../../ui-component/cards/TotalIncomeCard';\r\nimport ChartCard from '../../ui-component/cards/ChartCard';\r\nimport PopularCard from '../../ui-component/cards/PopularCard';\r\nimport authService from '../../utils/services/auth';\r\nimport { MoonLoader } from 'react-spinners'; // Importe o componente BounceLoader\r\n\r\n\r\n\r\nlet usuario = null\r\nconst Dashboard = () => {\r\n\r\n    const [carregando, setCarregando] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        usuario = authService.getCurrentUser()\r\n\r\n        setTimeout(() => {\r\n            setCarregando(false);\r\n          }, 2000);\r\n\r\n        // init();\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n\r\n            {carregando ? (\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', marginTop: '20%' }}>\r\n                    <MoonLoader color=\"#36d7b7\" />\r\n                </div>\r\n\r\n            ) :\r\n                (\r\n                    <>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                    {authService.getCurrentUser().authorities[0] === 'ADMIN' ? <EarningCard /> : ''}\r\n                                </Grid>\r\n                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                    <TotalChartCard />\r\n                                </Grid>\r\n                                <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                            <TotalIncomePatternCard />\r\n                                        </Grid>\r\n                                        <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                            <TotalIncomeCard />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12} sm={12} md={8}>\r\n                                    <ChartCard />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4}>\r\n                                    <PopularCard />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n\r\n                )}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React,{useEffect,useState} from 'react';\r\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\r\n\r\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport { requesicoes } from '../../../utils/services';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            backgroundColor: theme.palette.primary.dark,\r\n            borderRadius: '50%',\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            backgroundColor: theme.palette.primary.dark,\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.7,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    content: {\r\n        padding: '20px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: '#fff',\r\n        marginTop: '8px'\r\n    },\r\n    avatarRight: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.mediumAvatar,\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.primary[200],\r\n        zIndex: 1\r\n    },\r\n    cardHeading: {\r\n        fontSize: '2.125rem',\r\n        fontWeight: 500,\r\n        marginRight: '8px',\r\n        marginTop: '18px',\r\n        marginBottom: '8px'\r\n    },\r\n    subHeading: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 500,\r\n        color: theme.palette.primary[200]\r\n    },\r\n    avatarCricle: {\r\n        ...theme.typography.smallAvatar,\r\n        cursor: 'pointer',\r\n        backgroundColor: theme.palette.primary[200],\r\n        color: theme.palette.primary.dark\r\n    },\r\n    circleIcon: {\r\n        transform: 'rotate3d(1, 1, 1, 45deg)'\r\n    },\r\n    menuItem: {\r\n        marginRight: '14px',\r\n        fontSize: '1.25rem'\r\n    }\r\n}));\r\nlet qtdActivo =0;\r\n\r\nconst TotalChartCard = () => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [updateDOM, setUpdateDOM] = useState(false);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n      }, [])\r\n    \r\n      async function init() {\r\n        qtdActivo = await new Promise((resolve, reject) => {\r\n            requesicoes().getQtdEstudanteActivo()\r\n              .then(resolve)\r\n              .catch(reject);\r\n          });\r\n      setUpdateDOM(!updateDOM)\r\n\r\n      \r\n      }\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                        <Grid container justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                    <LocalMallOutlinedIcon fontSize=\"inherit\" />\r\n                                </Avatar>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Avatar\r\n                                    variant=\"rounded\"\r\n                                    className={classes.avatarRight}\r\n                                    aria-controls=\"menu-total-chart-card\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <MoreHorizIcon fontSize=\"inherit\" />\r\n                                </Avatar>\r\n                                <Menu\r\n                                    id=\"menu-total-chart-card\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                    variant=\"selectedMenu\"\r\n                                    anchorOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Typography className={classes.cardHeading}>{qtdActivo.data}</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Avatar className={classes.avatarCricle}>\r\n                                    <ArrowDownwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\r\n                                </Avatar>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography className={classes.subHeading}>Estudantes Activos</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TotalChartCard;\r\n","import React from 'react';\r\nimport {Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography} from '@material-ui/core';\r\n\r\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.light,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(210.04deg, #90CAF9 -50.94%, rgba(144, 202, 249, 0) 83.49%)',\r\n            borderRadius: '50%',\r\n            top: '-30px',\r\n            right: '-180px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(140.9deg, #90CAF9 -14.02%, rgba(144, 202, 249, 0) 77.58%)',\r\n            borderRadius: '50%',\r\n            top: '-160px',\r\n            right: '-130px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.primary[800],\r\n        color: '#fff'\r\n    },\r\n    primary: {\r\n        color: '#fff'\r\n    },\r\n    secondary: {\r\n        color: theme.palette.primary.light,\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\nconst TotalIncomePatternCard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n                <List className={classes.padding}>\r\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                        <ListItemAvatar>\r\n                            <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                <TableChartOutlinedIcon fontSize=\"inherit\" />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            className={classes.padding}\r\n                            primary={\r\n                                <Typography variant=\"h4\" className={classes.primary}>\r\n                                    2097\r\n                                </Typography>\r\n                            }\r\n                            secondary={\r\n                                <Typography variant=\"subtitle2\" className={classes.secondary}>\r\n                                    Aprovados\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TotalIncomePatternCard;\r\n","import React from 'react';\r\nimport {Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography} from '@material-ui/core';\r\n\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: theme.palette.warning.dark\r\n    },\r\n    secondary: {\r\n        color: theme.palette.grey[500],\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\nconst TotalIncomeCard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent className={classes.content}>\r\n                <List className={classes.padding}>\r\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                        <ListItemAvatar>\r\n                            <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                <StorefrontTwoToneIcon fontSize=\"inherit\" />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            className={classes.padding}\r\n                            primary={<Typography variant=\"h4\">2030</Typography>}\r\n                            secondary={\r\n                                <Typography variant=\"subtitle2\" className={classes.secondary}>\r\n                                    Reprovados\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TotalIncomeCard;\r\n","import value from '../../../assets/scss/_themes-vars.module.scss';\r\n\r\nconst chartData = {\r\n    type: 'area',\r\n    height: 95,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: [value['deepOrange800']],\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 1\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: (seriesName) => 'Ticket '\r\n                }\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            data: [0, 15, 10, 50, 30, 40, 25]\r\n        }\r\n    ]\r\n};\r\nexport default chartData;\r\n","import React from 'react';\r\nimport {Card, CardContent, Grid, makeStyles, Typography} from '@material-ui/core';\r\nimport Chart from 'react-apexcharts';\r\nimport supportChart from './support-chart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.orange.main\r\n    },\r\n    content: {\r\n        padding: '0px !important'\r\n    },\r\n    contentContainer: {\r\n        padding: '16px',\r\n        paddingBottom: 0,\r\n        color: '#fff'\r\n    },\r\n    errorLight: {\r\n        color: theme.palette.orange.light\r\n    },\r\n    fontStyle: {\r\n        fontWeight: 400\r\n    }\r\n}));\r\n\r\nconst BajajCard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n                <Grid container className={classes.contentContainer}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.fontStyle}>\r\n                                    Comunicações curso\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                    1839\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" className={classes.errorLight}>\r\n                            10% Aprovações\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Chart {...supportChart} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BajajCard;\r\n","import React, { useEffect } from 'react';\r\nimport { Avatar, Button, Card, CardActions, CardContent, Divider, Grid, makeStyles, Menu, MenuItem, Typography } from '@material-ui/core';\r\n\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\n\r\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\n\r\nimport BajajCard from './BajajCard';\r\nimport { gridSpacing } from '../../../store/constant';\r\nimport { requesicoes } from '../../../utils/services';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\nlet cursos = []\r\nlet aproveitamentos = []\r\n\r\nconst PopularCard = () => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    useEffect(() => {\r\n\r\n        init();\r\n    }, [])\r\n\r\n    async function init() {\r\n\r\n        const [cursoRequest, aprovetamentoRequest]\r\n            = await Promise.all([requesicoes().buscarCurso('?campos=id,nome'), requesicoes().getAproveitamento('?campos=id,estadoFinal,matricula.curso.id,matricula.curso.nome')])\r\n        cursos = cursoRequest.data;\r\n        aproveitamentos = aprovetamentoRequest.data;\r\n        console.log('Curos: ', cursos);\r\n        // console.log('Aproveitamento ', aproveitamentos);\r\n\r\n    }\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\">Aprovações por curso</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MoreHorizOutlinedIcon\r\n                                    fontSize=\"small\"\r\n                                    className={classes.primaryLight}\r\n                                    aria-controls=\"menu-popular-card\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleClick}\r\n                                />\r\n                                <Menu\r\n                                    id=\"menu-popular-card\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                    variant=\"selectedMenu\"\r\n                                    anchorOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}> Esse ano</MenuItem>\r\n                                    <MenuItem onClick={handleClose}> Ano passado</MenuItem>\r\n\r\n                                </Menu>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <BajajCard />\r\n                    </Grid>\r\n                    {/* {cursos.map((curso, index) => {\r\n                        return ( */}\r\n                            <Grid item xs={12} >\r\n\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {/* {curso.nome} */}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            1839.00\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\r\n                                            10% Aprovações\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                  \r\n                </Grid>\r\n            </CardContent>\r\n            <CardActions className={classes.cardAction}>\r\n                <Button size=\"small\" color=\"primary\" disableElevation>\r\n                    Ver todos\r\n                    <ChevronRightOutlinedIcon />\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PopularCard;\r\n","export default __webpack_public_path__ + \"static/media/earning.00f461a5.svg\";","import React, {useEffect,useState} from 'react';\r\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\r\n\r\nimport EarningIcon from './../../../assets/images/icons/earning.svg';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport { requesicoes } from '../../../utils/services';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.purple.main,\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            backgroundColor: theme.palette.purple.dark,\r\n            borderRadius: '50%',\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            backgroundColor: theme.palette.purple.dark,\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.7,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    content: {\r\n        padding: '20px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.purple.dark,\r\n        marginTop: '8px'\r\n    },\r\n    avatarRight: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.mediumAvatar,\r\n        backgroundColor: theme.palette.purple.main,\r\n        color: theme.palette.purple[200],\r\n        zIndex: 1\r\n    },\r\n    cardHeading: {\r\n        fontSize: '2.125rem',\r\n        fontWeight: 500,\r\n        marginRight: '8px',\r\n        marginTop: '18px',\r\n        marginBottom: '8px'\r\n    },\r\n    subHeading: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 500,\r\n        color: theme.palette.purple[200]\r\n    },\r\n    avatarCricle: {\r\n        cursor: 'pointer',\r\n        ...theme.typography.smallAvatar,\r\n        backgroundColor: theme.palette.purple[200],\r\n        color: theme.palette.purple.dark\r\n    },\r\n    circleIcon: {\r\n        transform: 'rotate3d(1, 1, 1, 45deg)'\r\n    },\r\n    menuItem: {\r\n        marginRight: '14px',\r\n        fontSize: '1.25rem'\r\n    }\r\n}));\r\n\r\nlet qtdEstudante=0;\r\nlet qtdEstuReprov=0;\r\n\r\nconst EarningCard = () => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [updateDOM, setUpdateDOM] = useState(false);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n      }, [])\r\n    \r\n      async function init() {\r\n        // const [qtdEstudanteRequest, qtdEstudanteReprovRequest] = await Promise.all([requesicoes().getQtdEstudante(), requesicoes().getQtdReprovados()]);\r\n    //   qtdEstudante= await Promise(requesicoes().getQtdEstudante())\r\n    qtdEstudante = await new Promise((resolve, reject) => {\r\n        requesicoes().getQtdEstudante()\r\n          .then(resolve)\r\n          .catch(reject);\r\n      });\r\n      \r\n      setUpdateDOM(!updateDOM)\r\n   \r\n      }\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                        <Grid container justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                    <img src={EarningIcon} alt=\"Notification\" />\r\n                                </Avatar>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Avatar\r\n                                    variant=\"rounded\"\r\n                                    className={classes.avatarRight}\r\n                                    aria-controls=\"menu-earning-card\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <MoreHorizIcon fontSize=\"inherit\" />\r\n                                </Avatar>\r\n                                <Menu\r\n                                    id=\"menu-earning-card\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                    variant=\"selectedMenu\"\r\n                                    anchorOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Typography className={classes.cardHeading}>{qtdEstudante.data}</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Avatar className={classes.avatarCricle}>\r\n                                    <ArrowUpwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\r\n                                </Avatar>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography className={classes.subHeading}>Total de Estudantes</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default EarningCard;\r\n","import value from '../../../../assets/scss/_themes-vars.module.scss';\r\n\r\nconst chartData = {\r\n    height: 480,\r\n    type: 'bar',\r\n    options: {\r\n        chart: {\r\n            stacked: true,\r\n            toolbar: {\r\n                show: true\r\n            },\r\n            zoom: {\r\n                enabled: true\r\n            }\r\n        },\r\n        colors: [value['blue200'], value['blue500'], value['deepPurple500'], value['deepPurple50']],\r\n        responsive: [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    legend: {\r\n                        position: 'bottom',\r\n                        offsetX: -10,\r\n                        offsetY: 0\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false\r\n            }\r\n        },\r\n        xaxis: {\r\n            type: 'string',\r\n            categories: ['2023', '2022', '2021', '2020', '2019', '2018', '2019'],\r\n            labels: {\r\n                style: {\r\n                    colors: []\r\n                }\r\n            }\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                style: {\r\n                    colors: []\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            show: true,\r\n            fontSize: '14px',\r\n            fontFamily: `'Roboto', sans-serif`,\r\n            position: 'bottom',\r\n            offsetX: 10,\r\n            labels: {\r\n                colors: value['grey500'],\r\n                useSeriesColors: false\r\n            },\r\n            markers: {\r\n                width: 16,\r\n                height: 16,\r\n                radius: 5\r\n            },\r\n            itemMargin: {\r\n                horizontal: 15,\r\n                vertical: 8\r\n            }\r\n        },\r\n        fill: {\r\n            type: 'solid'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        grid: {\r\n            show: true\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Aprovados',\r\n            data: [32, 124, 32, 32, 32, 80, 32]\r\n        },\r\n        {\r\n            name: 'Reprovados',\r\n            data: [32, 15, 15, 32, 64, 38, 78]\r\n        },\r\n       /* {\r\n            name: 'Profit',\r\n            data: [32, 145, 32, 32, 19, 102, 100]\r\n        },\r\n        {\r\n            name: 'Maintenance',\r\n            data: [0, 0, 0, 0, 0, 132]\r\n        }*/\r\n    ]\r\n};\r\nexport default chartData;\r\n","import React from 'react';\r\nimport {Card, CardContent, Grid, MenuItem, TextField, Typography, useTheme} from '@material-ui/core';\r\nimport Chart from 'react-apexcharts';\r\nimport barChart from './chart/bar-chart';\r\nimport {gridSpacing} from '../../../store/constant';\r\n\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Esse  ano'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'This Month'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'This Year'\r\n    }\r\n];\r\n\r\nconst ChartCard = () => {\r\n    const [value, setValue] = React.useState('today');\r\n    const theme = useTheme();\r\n\r\n    const primary = theme.palette.secondary.main;\r\n    barChart.options.grid.borderColor = theme.palette.primary.light;\r\n    barChart.options.yaxis.labels.style.colors = [theme.palette.secondary.main];\r\n    barChart.options.xaxis.labels.style.colors = [primary, primary, primary, primary, primary, primary, primary];\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Grid container direction=\"column\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\">Aproveitamento por ano acadêmico</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h3\">2,324</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    id=\"standard-select-currency\"\r\n                                    select\r\n                                    value={value}\r\n                                    onChange={(e) => setValue(e.target.value)}\r\n                                    variant=\"outlined\"\r\n                                >\r\n                                    {status.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Chart {...barChart} />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChartCard;\r\n"],"sourceRoot":""}