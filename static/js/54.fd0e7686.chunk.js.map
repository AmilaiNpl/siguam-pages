{"version":3,"sources":["views/forms/student/data_header_table.js","views/forms/student/list.js"],"names":["usuario","authService","getCurrentUser","columns","handleEdit","name","label","options","filter","sort","empty","customBodyRender","value","tableMeta","updateValue","rowIndex","rowId","tableData","id","authorities","includes","Button","onClick","estudantes","listaEstudantes","MuiDatatableExample","history","useHistory","useState","setSelectedData","lastClickTime","setLastClickTime","updateDom","setUpdateDom","carregando","setCarregando","useEffect","init","setTimeout","obterUltimoAnoFrequencia","a","matricula","Promise","resolve","requesicoes","getEstudantesMatriculados","data","map","x","i","NO","nome","apelido","sexo","numero","turma","situacao","curso","style","display","justifyContent","alignItems","width","marginTop","MoonLoader","color","theme","createMuiTheme","overrides","MUIDataTableHeadCell","fixedHeader","backgroundColor","MUIDataTableSelectCell","headerCell","checkboxRoot","expandDisabled","visibility","title","console","log","encrypted","CryptoJS","AES","encrypt","toString","push","onRowClick","columnIndex","currentTime","Date","getTime","rowData","rowMeta","dataIndex","selectedRow","handleRowDoubleClick"],"mappings":"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","file":"static/js/54.fd0e7686.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport authService from \"../../../utils/services/auth\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const renderEditableCell = (value, tableMeta, updateValue, rows) => {\r\n  return (\r\n    <div>\r\n      <TextField\r\n        style={{ width: \"32%\" }}\r\n        id=\"standard-basic\"\r\n        defaultValue={value}\r\n        onChange={(e) => {\r\n          updateValue(e.target.value);\r\n          tableMeta.rowData[1] = e.target.value;\r\n          rows[tableMeta.rowIndex].count = e.target.value;\r\n\r\n          console.log(\"=======Veja este valor: \", tableMeta.rowData[1]);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst usuario = authService.getCurrentUser();\r\nexport const columns = (handleEdit) => [\r\n  {\r\n    name: \"NO\",\r\n    label: \"##\",\r\n    options: {\r\n      filter: false,\r\n      sort: true,\r\n    }\r\n  },\r\n  {\r\n    name: \"numero\",\r\n    label: \"Número\",\r\n    options: {\r\n      filter: true,\r\n      sort: true\r\n    }\r\n  },\r\n  {\r\n    name: \"nome\",\r\n    label: \"Nome\",\r\n    options: {\r\n      filter: false,\r\n      sort: true,\r\n    }\r\n  },\r\n  {\r\n    name: 'sexo',\r\n    label: 'Genero',\r\n    options: {\r\n      filter: true,\r\n      sort: false\r\n    }\r\n  },\r\n  {\r\n    name: \"curso\",\r\n    label: \"Curso\",\r\n  },\r\n  {\r\n    name: \"turma\",\r\n    label: \"Turma\",\r\n  },\r\n  {\r\n    name: \"matricula\",\r\n    label: \"Ano\",\r\n    options: {\r\n      filter: true,\r\n      sort: true\r\n    }\r\n\r\n  },\r\n  {\r\n\r\n    name: 'Ações',\r\n    options: {\r\n      filter: false,\r\n      sort: false,\r\n      empty: true,\r\n      customBodyRender: (value, tableMeta, updateValue) => {\r\n        const rowIndex = tableMeta.rowIndex;\r\n        const rowId = tableMeta.tableData[rowIndex].id;\r\n//usuario.authorities =='ADMIN' ||\r\n        return (\r\n          <div>\r\n            {(usuario.authorities.includes('ADMIN') || usuario.authorities.includes('RA_N1')) &&\r\n              <Button onClick={() => handleEdit(rowId)}>Editar</Button>\r\n\r\n            }\r\n          </div>\r\n\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n];\r\n\r\n\r\nexport const errorCols = [\r\n  {\r\n    name: \"errorCode\",\r\n    label: \"Error Code\"\r\n  },\r\n  {\r\n    name: \"errorMessage\",\r\n    label: \"Error Message\"\r\n  }\r\n];\r\nexport const errorOptions = {\r\n  responsive: \"standard\",\r\n  selectableRows: \"none\",\r\n  download: false,\r\n  filter: false,\r\n  print: false,\r\n  search: false,\r\n  viewColumns: false\r\n};\r\n","import MUIDataTable from \"mui-datatables\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { columns, errorCols, errorOptions } from \"./data_header_table\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { requesicoes } from \"../../../utils/services\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MoonLoader } from 'react-spinners'; // Importe o componente BounceLoader\r\nimport authService from \"../../../utils/services/auth\";\r\n\r\n//import { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport CryptoJS from 'crypto-js';\r\nimport { TableCell } from \"@mui/material\";\r\nimport { TableRow } from \"mdi-material-ui\";\r\n\r\n\r\n\r\nlet estudantes = []\r\nlet listaEstudantes = []\r\nlet usuario=null\r\nexport default function MuiDatatableExample() {\r\n\r\n  const history = useHistory();\r\n  const [selectedData, setSelectedData] = useState(null);\r\n  const [lastClickTime, setLastClickTime] = useState(0);\r\n\r\n\r\n\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTableHeadCell: {\r\n          fixedHeader: { backgroundColor: \"darkblue\", color: \"white\" }\r\n        },\r\n        MUIDataTableSelectCell: {\r\n          headerCell: { backgroundColor: \"darkblue\" },\r\n          checkboxRoot: { color: \"white\", filter: \"brightness(0.5)\" },\r\n          expandDisabled: {\r\n            // Soft hide the button.\r\n            visibility: \"hidden\"\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  const [, setIsFormValid] = useState(false);\r\n  //const [, setOpen] = React.useState(false);\r\n  const [, setIsLoading] = useState(true);\r\n  const [updateDom, setUpdateDom] = useState(false);\r\n  const [carregando, setCarregando] = useState(true);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    usuario = authService.getCurrentUser();\r\n    init();\r\n    setTimeout(() => {\r\n      setCarregando(false);\r\n    }, 2000);\r\n\r\n  }, [])\r\n\r\n  const decryptParam = (encryptedParam) => {\r\n    var myPassword = \"ciam2023\";\r\n    var decrypted = CryptoJS.AES.decrypt(encryptedParam, myPassword);\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n};\r\n\r\n  async function init() {\r\n\r\n    listaEstudantes = await Promise.resolve(requesicoes().getEstudantesMatriculados('?campos=nome,id,apelido,sexo,numero,situacao'));\r\n    estudantes = listaEstudantes.data.map((x, i) => {\r\n      return {\r\n        ...x, NO: i + 1,\r\n        id: x[0].id, nome: x[0].nome + ' ' + x[0].apelido,\r\n        sexo: x[0].sexo === 'Masculino' ? 'M' : 'F',\r\n        numero: x[0].numero,\r\n        turma: x[0].situacao == 'Expulso' ? 'Expulso' : x[1],\r\n        curso: x[2].nome,\r\n        matricula: x[3] === null ? 'Null' : obterUltimoAnoFrequencia(x[3])\r\n      }\r\n      // ...x, NO: i + 1, nome: x.nome + ' ' + x.apelido, curso: x.curso.nome, sexo: x.sexo,id:x.id,turma:x.matricula.map(m=>m.turma.turma),\r\n      //matricula: x[3] == null ? 'Não Matriculado' : obterUltimoAnoFrequencia(x[3])\r\n\r\n    });\r\n    function obterUltimoAnoFrequencia(matricula) {\r\n      // console.log('Entrou aqui! ', matricula)\r\n\r\n      if (matricula === \"Primeiro\")\r\n        return '1o Ano';\r\n      if (matricula === \"Segundo\")\r\n        return '2o Ano';\r\n      if (matricula === \"Terceiro\")\r\n        return '3o Ano';\r\n      if (matricula === \"Quarto\")\r\n        return '4o Ano';\r\n      if (matricula === \"Quinto\")\r\n        return '5o Ano';\r\n    }\r\n\r\n    //Aqui somente se for uma lista de matricula provavelmente ao renovar uma matricula\r\n\r\n    setUpdateDom(!updateDom);\r\n  }\r\n  const handleEdit = (id) => {\r\n    console.log(id, 'Id')\r\n    var myPassword = \"ciam2023\";\r\n    var encrypted = CryptoJS.AES.encrypt(id.toString(), myPassword);\r\n    console.log('Incripitado ',encrypted);\r\n  history.push(`/student/student_edit?id=${encrypted}`);\r\n  };\r\n\r\n  const handleRowDoubleClick = (rowData, rowMeta) => {\r\n    const dataIndex = rowMeta.rowIndex;\r\n    const selectedRow = estudantes[dataIndex];\r\n    setSelectedData(selectedRow);\r\n    const id = selectedRow.id;\r\n\r\n    var myPassword = \"ciam2023\";\r\n    var encrypted = CryptoJS.AES.encrypt(id.toString(), myPassword);\r\n    history.push(`/student/detalhes?id=${encrypted}`);\r\n\r\n  };\r\n\r\n  const handleCellClick = (rowIndex, columnIndex) => {\r\n\r\n    const currentTime = new Date().getTime();\r\n    const timeDiff = currentTime - lastClickTime;\r\n\r\n    // Verifique se o tempo entre os cliques é menor que 300ms\r\n    if (timeDiff < 300) {\r\n      handleRowDoubleClick(rowIndex, columnIndex);\r\n    } else {\r\n      setLastClickTime(currentTime);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {carregando ? (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', marginTop: '20%' }}>\r\n          <MoonLoader color=\"#36d7b7\" />\r\n        </div>\r\n\r\n      ) : (\r\n        <MuiThemeProvider theme={getMuiTheme()}>\r\n          <MUIDataTable\r\n            title={'Lista de Estudantes'}\r\n            columns={columns(handleEdit)}\r\n            data={estudantes}\r\n            options={{\r\n              onRowClick: handleCellClick\r\n            }}\r\n          />\r\n        </MuiThemeProvider>\r\n      )}\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n"],"sourceRoot":""}